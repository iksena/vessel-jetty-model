/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: niallplatt (https://sketchfab.com/niallplatt)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/oil-tanker-b4aa7dcf31ca476dbc1ebcab94ca8cdc
title: Oil Tanker
*/

import React, { useEffect, useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import * as THREE from 'three';

export default function Model(props) {
  const { nodes, materials } = useGLTF('/ship.gltf');
  const model = useRef();
  const { size, position = [] } = props;
  const [x = 0, y = 0, z = 0] = position;
  const [xSize = 0, ySize = 0, zSize = 0] = size;
  const { boundingBox } = nodes.mesh_0.geometry;
  const modelLength = boundingBox.max?.x - boundingBox.min?.x;
  const modelWidth = boundingBox.max?.y - boundingBox.min?.y;
  const modelDepth = boundingBox.max?.z - boundingBox.min?.z;

  useEffect(() => {
    model.current.scale.copy(new THREE.Vector3(
      zSize / modelLength,
      xSize / modelWidth,
      ySize / modelDepth,
    ));
  }, [model, modelLength, modelWidth, modelDepth, xSize, ySize, zSize]);

  return (
    <group>
      <mesh
        ref={model}
        rotation={[-Math.PI / 2, 0, Math.PI / 2]}
        position={[x + 50, y, z + 35]}
        dispose={null}
        geometry={nodes.mesh_0.geometry}
        material={materials.initialShadingGroup}
      />
      {/* <mesh
        rotation={[-Math.PI / 2, 0, Math.PI / 2]}
        position={[x, y, z]}
      >
        <boxGeometry args={[ySize, xSize, zSize]} />
        <lineBasicMaterial color="rgba(255,0,0, 0.8)" opacity={0.8} />
      </mesh> */}
    </group>
  );
}

useGLTF.preload('/ship.gltf');
